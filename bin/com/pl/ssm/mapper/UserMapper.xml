<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper namespace="com.pl.ssm.mapper.userMapper"> -->
<mapper namespace="com.pl.ssm.mapper.UserMapper">

	<!-- 定义sql片段 id:sql片段的唯一标识 基于单表定义sql片段，可重用性高 在片段中不包括where -->
	<sql id="query_user_where">

		<if test="userCustom!=null">
			<if test="userCustom.sex!=null and userCustom.sex!=''">
				and carddb.sex=#{userCustom.sex}
			</if>
			<if test="userCustom.name!=null and userCustom.name!=''">
				and carddb.name like '%${userCustom.name}%'
			</if>
			<if test="cids!=null">
			<!-- collection:指定输入对象中的集合属性 
			item:每个遍历生成对象名
			open:开始遍历时的拼接串
			close:结束遍历时的拼接串
			separator:遍历的两个对象中间的拼接串
			-->
			<!--实现and (cid=2 or cid=5 or cid=9)的拼接  -->
			<!-- <foreach collection="cids" item="user_id" open="and(" close=")" separator="or">
			每次遍历需要拼接的串
			cid=#{user_id} 
			</foreach> -->
			<!-- 实现 and cid in(2,5,9)的拼接 -->
			<foreach collection="cids" item="user_id" open="and cid in(" close=")" separator=",">
			#{user_id}
			</foreach>
			</if>
		</if>
	</sql>
	<!-- 定义resultMap 将select cid cid_,name name_ from carddb 和User类中的属性进行映射 
		type:resultMap最终映射的java对象类型，可以使用别名 id：对resultMap的唯一标识 -->
	<resultMap type="user" id="userResultMap">
		<!--id：查询结果集中的唯一标识 column:查询出来的列名 property:type指定的pojo中的属性名 最终resultMap对colunm和property进行映射 -->
		<id column="cid_" property="cid" />
		<!-- 对普通列的映射定义 -->
		<result column="name_" property="name" />
	</resultMap>
	<!-- 用户信息综合查询 #{userCustom.sex}:取出包装对象的性别 -->
	<select id="findUserList"
		parameterType="com.pl.ssm.pojo.UserQueryVo"
		resultType="com.pl.ssm.pojo.UserCustom">
		<!-- select * from carddb where carddb.sex=#{userCustom.sex} and carddb.name 
			like '%${userCustom.name}%' -->
		select * from carddb
		<!--where可以自动去掉条件中的第一个and -->
		<where>
			<!-- 引用sql片段的id 如果refid指定的id在其他mapper文件，前面要加namespace-->
			<include refid="query_user_where"/>
			<!--在这里还会引用其他的sql片段  -->
		</where>
	</select>
	<!--用户信息的综合查询总数 -->
	<select id="findUserCount"
		parameterType="com.pl.ssm.pojo.UserQueryVo" resultType="int">
		select count(*) from carddb
		<where>
			<!-- 引用sql片段的id 如果refid指定的id在其他mapper文件，前面要加namespace-->
			<include refid="query_user_where"/>
			<!--在这里还会引用其他的sql片段  -->
		</where>
	</select>

	<!-- 使用resultMap进行映射 resultMap:指定定义的resultMap的id，如果resultMap在其他mapper文件，前面要加namespace -->
	<select id="findUserByIdResultMap" parameterType="int"
		resultMap="userResultMap">
		select cid cid_,name name_ from carddb where cid = #{cid}
	</select>
	<select id="findUserById" parameterType="int"
		resultType="com.pl.ssm.pojo.User">
		select * from carddb where cid = #{cid}
	</select>

	<insert id="insertUser" parameterType="user">
		<selectKey keyProperty="cid" order="AFTER" resultType="int">
			select Last_Insert_ID()
		</selectKey>
		insert into carddb(name,sex,cardDate,deposit)
		values(#{name},#{sex},#{cardDate},#{deposit})
	</insert>

	<delete id="deleteUser" parameterType="int">
		delete from carddb where
		cid=#{cid}
	</delete>

	<select id="findUserByName" parameterType="java.lang.String"
		resultType="com.pl.ssm.pojo.User">
		select * from carddb where name like '%${value}%'
	</select>
</mapper>